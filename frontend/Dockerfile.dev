# Build stage
# FROM node:20 AS frontend-build
# WORKDIR /app
# COPY package.json yarn.lock ./
# RUN yarn install --frozen-lockfile  # Use frozen lockfile for consistency
# COPY . .
# RUN yarn build
# Serve the static files using nginx in the final stage
# FROM nginx:alpine AS development
# COPY --from=frontend-build /app/dist /usr/share/nginx/html
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]


# Build stage
FROM node:20 AS frontend-build
WORKDIR /app
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile  # Use frozen lockfile for consistency
COPY . .
RUN yarn build

# Serve the static files using nginx in the final stage
FROM nginx:alpine AS development

# Copy the built static files from the build stage
COPY --from=frontend-build /app/dist /usr/share/nginx/html

# Copy custom Nginx config (ensure the config references the correct paths)
COPY nginx.dev.conf /etc/nginx/nginx.conf

# Set correct permissions and ownership for Nginx to serve files
RUN chown -R www-data:www-data /usr/share/nginx/html \
    && chmod -R 755 /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Start Nginx in the foreground
CMD ["nginx", "-g", "daemon off;"]
